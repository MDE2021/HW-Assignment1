package BusTransportSystem.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.runtime.ConstraintFunction;
import jetbrains.mps.smodel.runtime.ConstraintContext_CanBeChild;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.runtime.CheckingNodeContext;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.SNodePointer;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SProperty;

public class Bus_Constraints extends BaseConstraintsDescriptor {
  public Bus_Constraints() {
    super(CONCEPTS.Bus$Mt);
  }

  @Override
  protected ConstraintFunction<ConstraintContext_CanBeChild, Boolean> calculateCanBeChildConstraint() {
    return new ConstraintFunction<ConstraintContext_CanBeChild, Boolean>() {
      @NotNull
      public Boolean invoke(@NotNull ConstraintContext_CanBeChild context, @Nullable CheckingNodeContext checkingNodeContext) {
        boolean result = staticCanBeAChild(context.getNode(), context.getParentNode(), context.getConcept(), context.getLink());

        if (!(result) && checkingNodeContext != null) {
          checkingNodeContext.setBreakingNode(canBeChildBreakingPoint);
        }

        return result;
      }
    };
  }
  private static boolean staticCanBeAChild(SNode node, SNode parentNode, SAbstractConcept childConcept, SContainmentLink link) {
    if (SPropertyOperations.getInteger(node, PROPS.capacity$ASnE) > 50) {
      return false;
    }

    return true;
  }
  private static final SNodePointer canBeChildBreakingPoint = new SNodePointer("r:6781e17c-7a27-4fc2-bd9a-7e64ee97740d(BusTransportSystem.constraints)", "7969080036848486034");

  private static final class CONCEPTS {
    /*package*/ static final SConcept Bus$Mt = MetaAdapterFactory.getConcept(0x424422c1d3914c11L, 0x972cef618d3c579bL, 0x13668af04e3e54ebL, "BusTransportSystem.structure.Bus");
  }

  private static final class PROPS {
    /*package*/ static final SProperty capacity$ASnE = MetaAdapterFactory.getProperty(0x424422c1d3914c11L, 0x972cef618d3c579bL, 0x13668af04e3e54ebL, 0x13668af04e3ed854L, "capacity");
  }
}
